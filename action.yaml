name: Publish Docker image
description: Publishes a Docker image to a private registry

inputs:
  manifest-file:
    description: Path of the manifest file
    required: true
    default: manifest.json
  registry-username:
    description: Registry username
    required: true
  registry-password:
    description: Registry password
    required: true
  docker-registry-url:
    description: Docker registry URL
    required: true
    default: docker.registry.master-software.de
  build-args:
    description: Additional build arguments
    required: false
    default: ""

outputs:
  image-tag:
    description: Image tag
    value: ${{ steps.set-tag.outputs.image-tag }}

runs:
  using: composite
  steps:
    - name: Login to image registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.docker-registry-url }}
        username: ${{ inputs.registry-username }}
        password: ${{ inputs.registry-password }}

    - id: parse-metadata
      name: Parse metadata
      shell: bash
      run: |
        IMAGE_NAME=$(cat ${{ inputs.manifest-file }} | jq -r '"${{ inputs.docker-registry-url }}/\(.name | capture("^(?<scope>@[^/]+)?/?(?<name>.+)$").name)"')
        IMAGE_VERSION=$(cat ${{ inputs.manifest-file }} | jq -r '"\(.version)"')
        echo "image-name=$IMAGE_NAME" >> $GITHUB_OUTPUT
        echo "image-version=$IMAGE_VERSION" >> $GITHUB_OUTPUT

    - id: define-metadata
      name: Define image metadata
      uses: docker/metadata-action@v5
      with:
        images: ${{ steps.parse-metadata.outputs.image-name }}
        flavor: latest=false
        tags: |
          type=semver,pattern={{version}},value=${{ steps.parse-metadata.outputs.image-version }}
          type=semver,pattern={{major}}.{{minor}},value=${{ steps.parse-metadata.outputs.image-version }}
          type=semver,pattern={{major}},value=${{ steps.parse-metadata.outputs.image-version }}
          type=sha

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.define-metadata.outputs.tags }}
        build-args: ${{ inputs.build-args }}
